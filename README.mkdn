# NAME

Tfall - Generic interface for Perl5 template engines.

# SYNOPSIS

    use Tfall::Text::Xslate;

    my $tmpl = Tfall::Text::Xslate->new();
    $tmpl->render(\'Hello, <: $name :>', {name => 'John'});
    # => "Hello, John"

# DESCRIPTION

Tfall is generic interface for Perl5 template engines.

# Template Engine Class

- Tfall::Thing->new(@args);

- $tmpl->render($stuff, @args);

This method rendering template with @args.

If got error, this method returns 'undef'.This method never die if got parse error.

# How to create new tfall engine.

- my $tmpl = Tfall::Thing->new(@args);

Create new instance of tfall engine.

$sutff should allows Str for filename and ScalarRef for text.

Then, you can create new template wrapper with [Tfall::Base](http://search.cpan.org/perldoc?Tfall::Base).

You should implement only one abstract method named __render__.

For example, you can write TT bindings as following:

    # XXX broken
    package Tfall::TT;
    use strict;
    use warnings;
    use Template;

    sub render {
        my ($self, @args) = @_;
        my $tt = Template->new(@{$self->{args}});
        $tt->process( $self->{stuff}, @args, \my $out )
            or die $tt->error;
        $out;
    }

    1;

__process__ method MUST not throw any exceptions from template engine.
If the template engine raise exception, you should catch the exception and set it to $self->errstr and return undef.

# AUTHOR

Tokuhiro Matsuno <tokuhirom AAJKLFJEF GMAIL COM>

# SEE ALSO

[Any::Template](http://search.cpan.org/perldoc?Any::Template), <http://github.com/rtomayko/tilt>

# LICENSE

Copyright (C) Tokuhiro Matsuno

This library is free software; you can redistribute it and/or modify
it under the same terms as Perl itself.